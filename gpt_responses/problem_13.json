{
    "id": "problem_13",
    "code": "\nclass EmailService:\n    def send_email(self, to_address, subject, message):\n        # Simulate sending an email\n        print(f\"Sending email to {to_address}: {subject} - {message}\")\n\nclass NotificationManager:\n    def __init__(self, email_service):\n        self.email_service = email_service\n\n    def notify_user(self, user_email, user_message):\n        # Notify the user via email\n        self.email_service.send_email(user_email, \"Notification\", user_message)\n\nclass UserService:\n    def __init__(self, notification_manager):\n        self.notification_manager = notification_manager\n\n    def register_user(self, user_email):\n        # Register a new user and send a welcome email\n        self.notification_manager.notify_user(user_email, \"Welcome to our service!\")\n\n# Dependency Injection\nemail_service = EmailService()\nnotification_manager = NotificationManager(email_service)\nuser_service = UserService(notification_manager)\n\n# Register a new user\nuser_service.register_user(\"user@example.com\")\n\n# Introduce an error by trying to access an undefined variable\nprint(welcome_message)\n",
    "output": "Sending email to user@example.com: Notification - Welcome to our service!\nTraceback (most recent call last):\n  File \"<stdin>\", line 30, in <module>\nNameError: name 'welcome_message' is not defined",
    "tags": [
        "DependencyInjection",
        "Easy"
    ]
}