{
    "id": "problem_90",
    "code": "\ndef extract_command(input_string):\n    \"\"\"\n    This function takes an input string and extracts the command by stripping\n    whitespace and checking if it starts with a specific keyword.\n    \"\"\"\n    command = input_string.strip()\n    if command.startswith('run:'):\n        return command.split(':')[1]\n    else:\n        return \"No command found.\"\n\ndef process_commands(commands):\n    \"\"\"\n    Processes a list of command strings, extracting and executing each command.\n    \"\"\"\n    for cmd in commands:\n        extracted_command = extract_command(cmd)\n        if extracted_command != \"No command found.\":\n            execute_command(extracted_command)\n\ndef execute_command(command):\n    \"\"\"\n    Executes a given command. This is a placeholder for actual command execution logic.\n    \"\"\"\n    print(f\"Executing: {command}\")\n    if command == \"exit\":\n        exit_program()\n\ndef exit_program():\n    \"\"\"\n    Exits the program. Intentionally contains an error to demonstrate exception handling.\n    \"\"\"\n    # Intentional error: 'exit' function is not defined, it should be 'exit()'\n    exit\n\n# Example commands list\ncommands_list = [\n    \"   run:print('Hello, World!')   \",\n    \"run:exit\",\n    \"echo 'This should not run'\"\n]\n\n# Process the example commands\nprocess_commands(commands_list)\n",
    "output": "Executing: print('Hello, World!')\nExecuting: exit\nTraceback (most recent call last):\n  File \"<stdin>\", line 41, in <module>\n  File \"<stdin>\", line 23, in process_commands\n  File \"<stdin>\", line 31, in execute_command\n ",
    "tags": [
        "split",
        "startswith",
        "strip",
        "Hard"
    ]
}