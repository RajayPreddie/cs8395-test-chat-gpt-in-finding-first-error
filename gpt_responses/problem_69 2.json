{
    "id": "problem_69",
    "code": "\nimport math\n\ndef calculate_lower_bound(data):\n    # This function calculates the lower bound of a confidence interval for a dataset\n    mean = sum(data) / len(data)\n    standard_deviation = math.sqrt(sum((x - mean) ** 2 for x in data) / len(data))\n    confidence_level = 1.96  # for 95% confidence\n    margin_of_error = confidence_level * (standard_deviation / math.sqrt(len(data)))\n    lower_bound = mean - margin_of_error\n    return lower_bound\n\ndef convert_to_radians(degrees):\n    # Converts degrees to radians\n    radians = degrees * (math.pi / 180)\n    return radians\n\n# Example dataset of angles in degrees\nangle_degrees = [30, 45, 60, 90, 120, 150, 180]\n\n# Convert angles to radians and calculate the cosine of each\ncosines = []\nfor angle in angle_degrees:\n    radian = convert_to_radians(angle)\n    cosine_value = math.cos(radian)\n    cosines.append(cosine_value)\n\n# Now, let's calculate the lower bound for the cosines\nlower_bound_cosines = calculate_lower_bound(cosines)\n\n# Print the results\nprint(\"Cosine values:\", cosines)\nprint(\"Lower bound of cosines:\", lower_bound_cosines)\n",
    "output": "Cosine values: [0.8660254037844387, 0.7071067811865476, 0.5000000000000001, 6.123233995736766e-17, -0.4999999999999998, -0.866",
    "tags": [
        "lower",
        "math",
        "Medium"
    ]
}